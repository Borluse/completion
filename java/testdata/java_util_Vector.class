public class java/util/Vector
extends java/util/AbstractList
implements
	java/util/List
	java/util/RandomAccess
	java/lang/Cloneable
	java/io/Serializable
attributes
	Signature=<E:Ljava/lang/Object;>Ljava/util/AbstractList<TE;>;Ljava/util/List<TE;>;Ljava/util/RandomAccess;Ljava/lang/Cloneable;Ljava/io/Serializable;
	SourceFile=Vector.java
	InnerClasses
Fields
	protected elementData [Ljava/lang/Object;
	protected elementCount I
	protected capacityIncrement I
	private static final serialVersionUID J
		 ConstantValue
	private static final MAX_ARRAY_SIZE I
		 ConstantValue
Methods
	public <init> (II)V
		 Code ( LineNumberTable StackMapTable )
	public <init> (I)V
		 Code ( LineNumberTable )
	public <init> ()V
		 Code ( LineNumberTable )
	public <init> (Ljava/util/Collection;)V
		 Code ( LineNumberTable StackMapTable ) Signature=(Ljava/util/Collection<+TE;>;)V
	public copyInto ([Ljava/lang/Object;)V
		 Code ( LineNumberTable )
	public trimToSize ()V
		 Code ( LineNumberTable StackMapTable )
	public ensureCapacity (I)V
		 Code ( LineNumberTable StackMapTable )
	private ensureCapacityHelper (I)V
		 Code ( LineNumberTable StackMapTable )
	private grow (I)V
		 Code ( LineNumberTable StackMapTable )
	private static hugeCapacity (I)I
		 Code ( LineNumberTable StackMapTable )
	public setSize (I)V
		 Code ( LineNumberTable StackMapTable )
	public capacity ()I
		 Code ( LineNumberTable )
	public size ()I
		 Code ( LineNumberTable )
	public isEmpty ()Z
		 Code ( LineNumberTable StackMapTable )
	public elements ()Ljava/util/Enumeration;
		 Code ( LineNumberTable ) Signature=()Ljava/util/Enumeration<TE;>;
	public contains (Ljava/lang/Object;)Z
		 Code ( LineNumberTable StackMapTable )
	public indexOf (Ljava/lang/Object;)I
		 Code ( LineNumberTable )
	public indexOf (Ljava/lang/Object;I)I
		 Code ( LineNumberTable StackMapTable )
	public lastIndexOf (Ljava/lang/Object;)I
		 Code ( LineNumberTable )
	public lastIndexOf (Ljava/lang/Object;I)I
		 Code ( LineNumberTable StackMapTable )
	public elementAt (I)Ljava/lang/Object;
		 Code ( LineNumberTable StackMapTable ) Signature=(I)TE;
	public firstElement ()Ljava/lang/Object;
		 Code ( LineNumberTable StackMapTable ) Signature=()TE;
	public lastElement ()Ljava/lang/Object;
		 Code ( LineNumberTable StackMapTable ) Signature=()TE;
	public setElementAt (Ljava/lang/Object;I)V
		 Code ( LineNumberTable StackMapTable ) Signature=(TE;I)V
	public removeElementAt (I)V
		 Code ( LineNumberTable StackMapTable )
	public insertElementAt (Ljava/lang/Object;I)V
		 Code ( LineNumberTable StackMapTable ) Signature=(TE;I)V
	public addElement (Ljava/lang/Object;)V
		 Code ( LineNumberTable ) Signature=(TE;)V
	public removeElement (Ljava/lang/Object;)Z
		 Code ( LineNumberTable StackMapTable )
	public removeAllElements ()V
		 Code ( LineNumberTable StackMapTable )
	public clone ()Ljava/lang/Object;
		 Code ( LineNumberTable StackMapTable )
	public toArray ()[Ljava/lang/Object;
		 Code ( LineNumberTable )
	public toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
		 Code ( LineNumberTable StackMapTable ) Signature=<T:Ljava/lang/Object;>([TT;)[TT;
	elementData (I)Ljava/lang/Object;
		 Code ( LineNumberTable ) Signature=(I)TE;
	public get (I)Ljava/lang/Object;
		 Code ( LineNumberTable StackMapTable ) Signature=(I)TE;
	public set (ILjava/lang/Object;)Ljava/lang/Object;
		 Code ( LineNumberTable StackMapTable ) Signature=(ITE;)TE;
	public add (Ljava/lang/Object;)Z
		 Code ( LineNumberTable ) Signature=(TE;)Z
	public remove (Ljava/lang/Object;)Z
		 Code ( LineNumberTable )
	public add (ILjava/lang/Object;)V
		 Code ( LineNumberTable ) Signature=(ITE;)V
	public remove (I)Ljava/lang/Object;
		 Code ( LineNumberTable StackMapTable ) Signature=(I)TE;
	public clear ()V
		 Code ( LineNumberTable )
	public containsAll (Ljava/util/Collection;)Z
		 Code ( LineNumberTable ) Signature=(Ljava/util/Collection<*>;)Z
	public addAll (Ljava/util/Collection;)Z
		 Code ( LineNumberTable StackMapTable ) Signature=(Ljava/util/Collection<+TE;>;)Z
	public removeAll (Ljava/util/Collection;)Z
		 Code ( LineNumberTable ) Signature=(Ljava/util/Collection<*>;)Z
	public retainAll (Ljava/util/Collection;)Z
		 Code ( LineNumberTable ) Signature=(Ljava/util/Collection<*>;)Z
	public addAll (ILjava/util/Collection;)Z
		 Code ( LineNumberTable StackMapTable ) Signature=(ILjava/util/Collection<+TE;>;)Z
	public equals (Ljava/lang/Object;)Z
		 Code ( LineNumberTable )
	public hashCode ()I
		 Code ( LineNumberTable )
	public toString ()Ljava/lang/String;
		 Code ( LineNumberTable )
	public subList (II)Ljava/util/List;
		 Code ( LineNumberTable ) Signature=(II)Ljava/util/List<TE;>;
	protected removeRange (II)V
		 Code ( LineNumberTable StackMapTable )
	private writeObject (Ljava/io/ObjectOutputStream;)V
		 Code ( LineNumberTable StackMapTable ) Exceptions
	public listIterator (I)Ljava/util/ListIterator;
		 Code ( LineNumberTable StackMapTable ) Signature=(I)Ljava/util/ListIterator<TE;>;
	public listIterator ()Ljava/util/ListIterator;
		 Code ( LineNumberTable ) Signature=()Ljava/util/ListIterator<TE;>;
	public iterator ()Ljava/util/Iterator;
		 Code ( LineNumberTable ) Signature=()Ljava/util/Iterator<TE;>;
public java.util.Vector
	extends java.util.AbstractList
	implements java.util.List, java.util.RandomAccess, java.lang.Cloneable, java.io.Serializable
	protected java.lang.Object[] elementData
	protected int elementCount
	protected int capacityIncrement
	private static final long serialVersionUID
	private static final int MAX_ARRAY_SIZE
	public void  <init>(int , int )
	public void  <init>(int )
	public void  <init>()
	public void  <init>(java.util.Collection )
	public void  copyInto(java.lang.Object[] )
	public void  trimToSize()
	public void  ensureCapacity(int )
	private void  ensureCapacityHelper(int )
	private void  grow(int )
	private static int  hugeCapacity(int )
	public void  setSize(int )
	public int  capacity()
	public int  size()
	public boolean  isEmpty()
	public java.util.Enumeration  elements()
	public boolean  contains(java.lang.Object )
	public int  indexOf(java.lang.Object )
	public int  indexOf(java.lang.Object , int )
	public int  lastIndexOf(java.lang.Object )
	public int  lastIndexOf(java.lang.Object , int )
	public java.lang.Object  elementAt(int )
	public java.lang.Object  firstElement()
	public java.lang.Object  lastElement()
	public void  setElementAt(java.lang.Object , int )
	public void  removeElementAt(int )
	public void  insertElementAt(java.lang.Object , int )
	public void  addElement(java.lang.Object )
	public boolean  removeElement(java.lang.Object )
	public void  removeAllElements()
	public java.lang.Object  clone()
	public java.lang.Object[]  toArray()
	public java.lang.Object[]  toArray(java.lang.Object[] )
	java.lang.Object  elementData(int )
	public java.lang.Object  get(int )
	public java.lang.Object  set(int , java.lang.Object )
	public boolean  add(java.lang.Object )
	public boolean  remove(java.lang.Object )
	public void  add(int , java.lang.Object )
	public java.lang.Object  remove(int )
	public void  clear()
	public boolean  containsAll(java.util.Collection )
	public boolean  addAll(java.util.Collection )
	public boolean  removeAll(java.util.Collection )
	public boolean  retainAll(java.util.Collection )
	public boolean  addAll(int , java.util.Collection )
	public boolean  equals(java.lang.Object )
	public int  hashCode()
	public java.lang.String  toString()
	public java.util.List  subList(int , int )
	protected void  removeRange(int , int )
	private void  writeObject(java.io.ObjectOutputStream )
	public java.util.ListIterator  listIterator(int )
	public java.util.ListIterator  listIterator()
	public java.util.Iterator  iterator()
